# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
- group: My Values

stages:
  - stage: DeployVM
    jobs:
    - deployment: Deploy
      displayName: Create VM via Terraform
      pool:
        vmImage: ubuntu-latest
      environment: 
        name: 'apply'
      strategy: 
        runOnce:
          deploy:
            steps:
            - task: TerraformInstaller@1
              inputs:
                terraformVersion: 'latest'
            - task: TerraformTaskV4@4
              inputs:
                provider: 'azurerm'
                command: 'init'
                workingDirectory: '$(System.DefaultWorkingDirectory)/vm'
                backendServiceArm: '8oct'
                backendAzureRmResourceGroupName: '$(rg)'
                backendAzureRmStorageAccountName: '$(str-acc)'
                backendAzureRmContainerName: '$(blob)'
                backendAzureRmKey: 'envpipeline.tfstate'
